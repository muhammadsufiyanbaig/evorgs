"use client";import React, { useState } from "react";import Link from "next/link";import { useRouter } from "next/navigation";import { Button } from "@/components/ui/button";import { Input } from "@/components/ui/input";import { Label } from "@/components/ui/label";import { Eye, EyeOff, Shield } from "lucide-react";import Image from "next/image";import { useAuth } from "@/hooks/useAuth";import { toast } from "sonner";export function AdminLoginForm() {  const router = useRouter();  const { login, isLoading, error, clearError } = useAuth();    const [formData, setFormData] = useState({    email: '',    password: '',  });    const [showPassword, setShowPassword] = useState(false);  const handleInputChange = (field: string, value: string) => {    setFormData(prev => ({ ...prev, [field]: value }));    if (error) clearError();  };  const handleSubmit = async (e: React.FormEvent) => {    e.preventDefault();        if (!formData.email || !formData.password) {      toast.error('Please fill in all fields');      return;    }    try {      await login(formData.email, formData.password, 'Admin');      toast.success('Successfully logged in as Admin');      router.push('/admin');    } catch (err) {      const errorMessage = err instanceof Error ? err.message : 'Login failed';      toast.error(errorMessage);    }  };  return (    <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-gray-50 to-white p-4">      <div className="w-full max-w-md space-y-8">        <div className="text-center space-y-4">          <Link href="/" className="inline-block">            <Image              src="/logo.svg"              alt="Evorgs™"              width={180}              height={60}              className="mx-auto"            />          </Link>          <div className="space-y-2">            <div className="flex items-center justify-center space-x-2">              <Shield className="h-6 w-6 text-gray-600" />              <h2 className="text-3xl font-bold text-gray-900">Admin Portal</h2>            </div>            <p className="text-gray-600 mt-2">Secure administrator access</p>          </div>        </div>        <div className="bg-white p-8 rounded-2xl shadow-lg border border-gray-100">          <form onSubmit={handleSubmit} className="space-y-6">            {error && (              <div className="bg-red-50 border border-red-200 text-red-800 px-4 py-3 rounded-lg text-sm">                {error}              </div>            )}            <div className="space-y-2">              <Label htmlFor="email" className="text-sm font-medium text-gray-700">                Administrator Email              </Label>              <Input                id="email"                type="email"                value={formData.email}                onChange={(e) => handleInputChange('email', e.target.value)}                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-gray-500 focus:border-gray-500 transition-colors"                placeholder="Enter your admin email"                required              />            </div>            <div className="space-y-2">              <Label htmlFor="password" className="text-sm font-medium text-gray-700">                Password              </Label>              <div className="relative">                <Input                  id="password"                  type={showPassword ? "text" : "password"}                  value={formData.password}                  onChange={(e) => handleInputChange('password', e.target.value)}                  className="w-full px-4 py-3 pr-12 border border-gray-300 rounded-lg focus:ring-2 focus:ring-gray-500 focus:border-gray-500 transition-colors"                  placeholder="Enter your password"                  required                />                <button                  type="button"                  onClick={() => setShowPassword(!showPassword)}                  className="absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-gray-600"                >                  {showPassword ? (                    <EyeOff className="h-5 w-5" />                  ) : (                    <Eye className="h-5 w-5" />                  )}                </button>              </div>            </div>            <Button              type="submit"              className="w-full bg-gray-800 hover:bg-gray-900 text-white py-3 rounded-lg font-medium transition-colors"              disabled={isLoading}            >              {isLoading ? (                <div className="flex items-center space-x-2">                  <div className="animate-spin rounded-full h-4 w-4 border-t-2 border-white"></div>                  <span>Authenticating...</span>                </div>              ) : (                'Admin Login'              )}            </Button>          </form>          <div className="mt-6 space-y-4">            <div className="text-center text-sm space-y-2">              <p className="text-gray-600">Other portals:</p>              <div className="flex gap-2 justify-center">                <Link href="/auth/login" className="text-gray-500 hover:text-gray-600 font-semibold">                  User                </Link>                <span className="text-gray-400">•</span>                <Link href="/vendor/auth/login" className="text-gray-500 hover:text-gray-600 font-semibold">                  Vendor                </Link>              </div>
            </div>
          </div>
        </div>

        <div className="text-center text-xs text-gray-500">
          <p>Test credentials: admin@test.com / password</p>
        </div>
      </div>
    </div>
  );
}
